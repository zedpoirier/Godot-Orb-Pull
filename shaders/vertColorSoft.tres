[gd_resource type="VisualShader" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "camera"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeVectorCompose" id=5]

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = 0.5

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Input:4
	mat4 n_out4p0 = CAMERA_MATRIX;

// Input:2
	vec3 n_out2p0 = VERTEX;

// TransformVectorMult:3
	vec3 n_out3p0 = (n_out4p0 * vec4(n_out2p0, 1.0)).xyz;

// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;

// Scalar:7
	float n_out7p0 = 0.500000;

// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out5p0, n_out7p0, n_out5p2);

// Output:0
	ALBEDO = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -773, 71.75 )
nodes/vertex/0/position = Vector2( 520, 120 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -700, 280 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -440, 180 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -660, 200 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -180, 260 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 140, 240 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -180, 420 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 2, 0, 3, 1, 3, 0, 5, 0, 5, 0, 6, 0, 5, 2, 6, 2, 7, 0, 6, 1, 6, 0, 0, 0 )
